{
  "id": 1017771,
  "blocks": [
    {
      "chunks": [
        {
          "zh": "关于前后端接口联调的问题讨论",
          "en": "Discussion on the issue of front-end and back-end interface debugging"
        }
      ],
      "type": "title"
    },
    {
      "chunks": [
        {
          "zh": "## 技术经理提出了一个要求： 后端提前设计好 api 文档，前端按照文档 mock 开发，然后也不需要联调这个过程。",
          "en": "## The technical manager has made a request: the back-end should design the API documentation in advance, the front-end should develop according to the documentation mock, and then the debugging process is not necessary."
        },
        {
          "zh": "我在想这样真的就不需要联调了吗？",
          "en": "I'm wondering if this really eliminates the need for debugging?"
        },
        {
          "zh": "往往身边的同事连个文档都不会看，让前后端按照文档开发真的可行吗？",
          "en": "Often, colleagues around me do not even read the documentation. Is it really feasible to have the front-end and back-end develop according to the documentation?"
        },
        {
          "zh": "这样会不会更繁琐",
          "en": "Will this be more cumbersome?"
        }
      ],
      "type": "content"
    },
    {
      "chunks": [
        {
          "zh": "你技术经理是不是没啥项目经验",
          "en": "Does your technical manager have no project experience?"
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "没问题。我们已经这样子搞了 5 年了。",
          "en": "No problem. We have been doing this for 5 years."
        },
        {
          "zh": "1 、后端开发定义好接口（接口定义网址： https://nei.netease.com ）直接给到前端",
          "en": "1. The back-end developers define the interface (interface definition website: https://nei.netease.com) and directly give it to the front-end"
        },
        {
          "zh": "2 、前端查看接口，如果觉得有问题，直接给后端说，或者汇总后抽个时间两个人过一次接口，约定接口后端完成时间。",
          "en": "2. The front-end checks the interface. If there are any problems, tell the back-end directly, or summarize them and take some time for two people to go through the interface once, and agree on the completion time of the back-end interface."
        },
        {
          "zh": "3 、接口确定完成后。前、后端并行开发，与此同时 QA 完成测试用例评审并提供冒烟用例。",
          "en": "3. After the interface is confirmed. The front-end and back-end develop in parallel, and at the same time, QA completes the test case review and provides smoke test cases."
        },
        {
          "zh": "4 、前后端完成冒烟用例能够正常执行，那么就提测。（这一步要说也是联调，只不过换个说法）",
          "en": "4. If the front-end and back-end can execute the smoke test cases normally, then submit for testing. (This step is also debugging, just a different way of saying it)"
        },
        {
          "zh": "5 、前端负责提测演示，提测演示过程中记录提测问题（或者记录需要调整的部分细节）。",
          "en": "5. The front-end is responsible for submitting the test demo, and records the test problems (or records the details that need to be adjusted) during the test demo."
        },
        {
          "zh": "6 、提测问题修复完成，发布提测邮件到项目组成员。",
          "en": "6. After the test problems are fixed, send the test submission email to the project team members."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "后端靠谱才行，我对接口就相当于给后端做一遍测试，除了 curd 没一个靠谱的接口🙉",
          "en": "The back-end must be reliable. I'm equivalent to doing a test for the back-end on the interfaces. Except for curd, there is no reliable interface 🙉"
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "前后端按照约定开发完了，放到一块不用联调就能跑通这个效果能实现。",
          "en": "It is possible to achieve the effect that the front-end and back-end can run together without debugging after they are developed according to the agreement."
        },
        {
          "zh": "不过很看开发和前期沟通水平。",
          "en": "But it depends on the development and the level of early communication."
        },
        {
          "zh": "你既然问了，贵司九成九实现不了。",
          "en": "Since you asked, your company is 90% unable to achieve it."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "开发完毕后还是会进入联调的阶段的。",
          "en": "After development is complete, there will still be a debugging phase."
        },
        {
          "zh": "不需要联调就纯扯淡水平想当的情况下，前端设计的 api 会更完善一点，后端设计接口时容易页面看都不看，页面该显示的数据不返回。",
          "en": "If you don't need debugging, it's purely nonsense. In this case, the front-end designed APIs will be more complete. Back-end developers tend to ignore the page when designing interfaces, and the data that the page should display is not returned."
        },
        {
          "zh": "后端设计接口也好，我当前端的省力，接口有问题再对后端提出修改意见写 api 文档要用成熟的 api 接口管理网站，用过 eolink 、apifox 功能齐全都不错",
          "en": "Whether the back-end designs the interface well or not saves the front-end effort. If there is a problem with the interface, submit modification suggestions to the back-end. Writing API documentation requires mature API interface management websites. I have used eolink and apifox, and they are both fully functional and good."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "全栈开发，一个人把前后端都写了，自然也就不需要联调过程了。",
          "en": "Full-stack development, one person writes both the front-end and back-end, naturally eliminating the need for debugging."
        },
        {
          "zh": "当然对开发水平要求比较高，不是随便一个会写点前端的后端或者对后端一知半解的前端就能玩得转的。",
          "en": "Of course, the development level is relatively high, not just any back-end developer who knows a little front-end or a front-end developer who only knows a little about the back-end can handle it."
        },
        {
          "zh": "有幸曾在一家外企创业团队待过，开发时一个人就负责一整个需求，需要什么就写什么，前端、后端、db 、mq 、cms 后台，信息模板……，需求涉及到的就一口气全做了，效率极高，问题很少，对团队和个人成长都有好处……",
          "en": "I was fortunate enough to work in a foreign company's startup team. During development, one person was responsible for the entire requirement, writing whatever was needed, front-end, back-end, db, mq, cms backend, information templates... all the requirements were done in one go. The efficiency was extremely high, problems were few, and it was beneficial to both the team and personal growth..."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "@whoami9426 经理说单测没意义，我感觉他只会一张嘴也没意义",
          "en": "@whoami9426 The manager said that unit testing is meaningless, I feel that he is just talking and also meaningless"
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "前提是前端也要理解业务逻辑，不了解业务逻辑看文档费劲，我遇到的前端基本只关心页面交互，写了文档还得讲一遍，沟通成本高所以我们直接干掉中间环节，后端先启动，文档用 swagger 啥的生成一个就行。",
          "en": "The premise is that the front-end also needs to understand the business logic. It's difficult to read the documentation if you don't understand the business logic. The front-end I met basically only cares about page interaction. After writing the documentation, I still have to explain it again. The communication cost is high, so we directly eliminate the intermediate link, start the back-end first, and generate the document with swagger or something."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "就是想白嫖联调排期时间, 压缩工期.",
          "en": "Just want to get the debugging schedule time for free and compress the schedule."
        },
        {
          "zh": "你猜这个经理会不会把文档完善的时间加到开发工时里?",
          "en": "Do you think this manager will add the time to improve the documentation to the development time?"
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "这个要求是合理的。",
          "en": "This requirement is reasonable."
        },
        {
          "zh": "设计优先。",
          "en": "Design first."
        },
        {
          "zh": "良好的设计可以有效降低软件工程的成本，提供软件质量。",
          "en": "Good design can effectively reduce the cost of software engineering and improve software quality."
        },
        {
          "zh": "OP 应该思考采取什么的方式方法加强设计的一步到位，以及前端和后端在沟通和文档质量的高效信息传递。",
          "en": "OP should think about what ways and methods to use to strengthen the design at one time, and the efficient information transmission between the front-end and back-end in communication and document quality."
        },
        {
          "zh": "而不是基于本身就不合理的工作常态中找方式方法来否定要求的合理性。",
          "en": "Rather than finding ways and methods to deny the reasonableness of the request based on the unreasonable state of work itself."
        },
        {
          "zh": "如果一个人开发，在充分设计好后的完成开发的效率为 1 。",
          "en": "If one person develops, the development efficiency after the design is fully completed is 1."
        },
        {
          "zh": "在前后端分离开发的环境中，这个效率多数情况下不能达到 1/2=0.5 。",
          "en": "In an environment where the front-end and back-end are developed separately, this efficiency, in most cases, cannot reach 1/2=0.5."
        },
        {
          "zh": "很多场景下比 1 还有高。",
          "en": "In many scenarios, it is higher than 1."
        },
        {
          "zh": "效率差的情况下甚至达到了 1+1>2 。",
          "en": "In the case of poor efficiency, it even reaches 1+1>2."
        },
        {
          "zh": "这种情况下就必须采取措施提升效率。",
          "en": "In this case, measures must be taken to improve efficiency."
        },
        {
          "zh": "而不是降低效率。",
          "en": "Rather than reducing efficiency."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "我去开发商买房，开发商让我去银行贷款，银行让我公司出收入证明，银行把贷款打给了开发商，理论上我每月还月供，拿到了房子，开发商拿到了房款，银行拿到了利息。",
          "en": "I went to the developer to buy a house, the developer asked me to go to the bank for a loan, the bank asked my company to issue income proof, the bank gave the loan to the developer, theoretically, I pay the monthly mortgage, got the house, the developer got the payment for the house, and the bank got the interest."
        },
        {
          "zh": "但实际执行的时候.....",
          "en": "But in actual execution....."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "理论上可以做，我们这样做过，但会面临一些问题：- 后端出文档前必须把所有业务逻辑的实现理个大概，才能给出 api 文档，这个挺需要时间的（业务简单的话还好）",
          "en": "Theoretically, it can be done, and we have done it this way, but we will face some problems: - The back-end must understand the implementation of all business logic before issuing the documentation, so as to give the API documentation, which takes a long time (it's okay if the business is simple)"
        },
        {
          "zh": "- 后续后端大概也会改 api ，因为前期思考，大概率没有实际投入开发深入，这时某些需求可能会有更好的方案，然后可能会改 api 的数据结构，不过第一步做的好的话，改动应该不会太大，只是说存在这个风险。",
          "en": "- In the future, the back-end will probably also modify the API, because of the early thinking, it is likely that there is no actual investment in development, at this time, some requirements may have better solutions, and then the data structure of the API may be modified, but if the first step is done well, the changes should not be too big, just saying that there is this risk."
        },
        {
          "zh": "- 接口会有很多相互依赖，比如最简单的一个业务，必须先创建数据，才能有展示数据。",
          "en": "- The interfaces will have many dependencies on each other, such as the simplest business, you must first create data before you can display the data."
        },
        {
          "zh": "如果业务复杂了，mock 可能会有些麻烦",
          "en": "If the business is complex, mock may be a little troublesome"
        },
        {
          "zh": "所以，个人来看，联调的时间还是需要的，只是提前有接口文档，联调的时间相对会短一些",
          "en": "So, personally, the debugging time is still needed, but with the interface documentation in advance, the debugging time will be relatively shorter"
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "这个其实你不用想，问问身边的人有没有成功案例就知道了我估计 90%后期也要改 api 的。哪有一次设计成功那么简单的。。。。。",
          "en": "You don't need to think about it, just ask the people around you if there are any successful cases. I estimate that 90% of the APIs will also be modified later. How can a design succeed so simply....."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": ">>>.后端提前设计好 api 文档  这个也是需要前端参与的，有些前端是不处理任何业务逻辑的，格式要求很敏感。",
          "en": ">>>. The back-end designs the API documentation in advance. This also requires the front-end to participate. Some front-ends do not process any business logic, and the format requirements are very sensitive."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "简单业务下没有问题,复杂的业务依旧需要联调,当然后端把单测写的足够好也能减少联调的必要",
          "en": "There is no problem with simple business, complex business still needs debugging, and of course, if the back-end writes the single test well enough, it can also reduce the need for debugging"
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "我(后端)也想这样,可是受限于和我合作的前端的水平,他连个接口文档都看不明白的人, 我还不如直接开发完,告诉他怎么用呢.",
          "en": "I (back-end) also want to do this, but it is limited by the level of the front-end developer I work with, he doesn't understand the interface documentation, I might as well just finish the development and tell him how to use it."
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "只能说这样，测试时候一堆 bug/doge",
          "en": "I can only say this, there will be a lot of bugs during testing/doge"
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "还是按项目来。",
          "en": "Still follow the project."
        },
        {
          "zh": "如果接口多，可以这样做，几十个接口还有有文档查询一下好。",
          "en": "If there are many interfaces, you can do this, it's good to look up the documentation for dozens of interfaces."
        },
        {
          "zh": "如果要改，改完知会一下就好了。",
          "en": "If you need to change it, just let them know after the change."
        },
        {
          "zh": "这么多接口应该也不会改太多，毕竟工作量也大。",
          "en": "So many interfaces shouldn't change too much, after all, the workload is also large."
        },
        {
          "zh": "手写文档复杂，就使用 swagger 之类就好",
          "en": "Hand-written documentation is complicated, just use swagger or something like that"
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "开发不联调，到时候上线是不是要通宵测试  🐶",
          "en": "If you don't debug during development, do you have to stay up all night for testing when going live 🐶"
        }
      ],
      "type": "replies"
    },
    {
      "chunks": [
        {
          "zh": "经理提出这个要求目的是为了提高版本质量， 我是感觉跟质量不质量的不太搭嘎",
          "en": "The manager's purpose in making this requirement is to improve the quality of the version, but I feel that it doesn't really tie in with the quality"
        }
      ],
      "type": "replies"
    }
  ]
}